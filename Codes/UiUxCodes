import React from 'react';

import HomeNavBar from '../Components/HomeNavbar';
import Search from '../Components/Search';
import Cataloge from '../Components/Cataloge';
import Footer from '../Components/Footer';
import Cover from '../assests/cover.jpg';

export default function Home() {
    return (
        <div>
            <HomeNavBar/>
            <div>
                <img src={Cover} style={{width: '100%', }} alt="cover" />
            </div>
            <Search/>
            
            <Cataloge/>
            <Footer/>
            
        </div>
    )
}


import React, { Component } from 'react';
import Navbar from '../Components/HomeNavbar'
import { Container, Col, Row, Spinner, Button } from 'reactstrap';
import {connect} from 'react-redux';
import { withRouter } from 'react-router-dom';
import { getItemInfo, deleteItem } from '../actions/authActions';
import UpdateItem from '../Components/UpdateItem';
import Footer from '../Components/Footer';

const qs = require('query-string');



class ItemInfo extends Component {
    _isMounted = false;
    state ={
        item: null,
        deleting: false,
        show: false,
        loading: true
    }

    componentDidMount=()=>{
        this._isMounted = true;
        const parsed = qs.parse(window.location.search);
        if(parsed.id){
            this.props.getItemInfo(parsed.id).then(res=>{
                if(this._isMounted){
                    this.setState({item: res, loading: false})
                }
            })
        }
    }
    componentWillUnmount() {this._isMounted = false}


    AddItem=(item)=>{
        let items = this.state.items;
        items.push(item);
        this.setState({items})
    }

    deleteItem =()=>{
        this.setState({deleting: true})
        const parsed = qs.parse(window.location.search);
        this.props.deleteItem(parsed.id).then(res=>{
            if(res.success){
                this.setState({deleting: false});
                this.props.history.push('/dashboard/items');
                window.location.reload();
            }
        })
    }

    toggle=()=>{
        this.setState({show: !this.state.show});
    }


    render() {
        return (
            <div>
                <Navbar/>
                <Container style={{marginTop: '50px', marginBottom: '100px'}} >

                    {this.state.loading? <div style={{left: '50%', position: 'absolute'}} ><Spinner size="lg" /></div> : 

                        <Row style={{boxShadow: '0 0 15px rgba(0,0,0,.1)'}}>
                            <Col lg={8} style={{padding: '30px', background: 'white'}}>
                                <Row>
                                    <Col sm={6} style={{display:'flex', justifyContent: 'center'}} ><img src={this.state.item.picture} style={{width: '80%', marginBottom: '30px'}} alt={this.state.item.name} /></Col>
                                    <Col sm={6} >
                                        <h3>{this.state.item.name}</h3>
                                            <h4>{`Rs: ${this.state.item.price}`}</h4>
                                            <h5>{this.state.item.category}</h5>
                                            <h5>{this.state.item.qty}</h5>
                                            <hr/>
                                        <p >{this.state.item.short_desc}</p>
                                    </Col>
                                </Row>


                                <p style={{marginBottom: '30px'}} >{this.state.item.desc}</p>

                                {this.state.item.comments.map((comment)=>(
                                    <section style={{marginTop: '10px', background: '#dceaf8', padding: '20px', borderRadius: '1.2em'}} >
                                        <p style={{marginBottom: '0'}}><strong>{comment.user_name}</strong></p>
                                        <p>{comment.comment}</p>
                                    </section>
                                ))}

                                
                                
                            </Col>
                            <Col lg={4} style={{padding: '30px', background: '#dceaf8'}} >

                                <h4>Seller</h4>

                                <p style={{marginBottom: '0'}}><strong>Name : </strong> {this.state.item.seller.name}</p>
                                <p style={{marginBottom: '0'}}><strong>Tp : </strong> {this.state.item.seller.tp}</p>
                                <p style={{marginBottom: '0'}}><strong>Address : </strong> {this.state.item.seller.address}</p>
                                <p style={{marginBottom: '0'}}><strong>Account no : </strong> {this.state.item.seller.account_no}</p>
                                <p style={{marginBottom: '0'}}><strong>Account details : </strong> {this.state.item.seller.account_details}</p>

                                <hr/>
                                <h4>Auhtorized person</h4>

                                <p style={{marginBottom: '0'}}><strong>Name : </strong> {this.state.item.user.name}</p>
                                <p style={{marginBottom: '0'}}><strong>Tp : </strong> {this.state.item.user.tp}</p>
                                <p style={{marginBottom: '0'}}><strong>Email : </strong> {this.state.item.user.email}</p>
                                <p style={{marginBottom: '0'}}><strong>Address : </strong> {this.state.item.user.address}</p>

                                <Button color="danger" block style={{marginTop: '30px'}} onClick={this.deleteItem} > {this.state.deleting? <Spinner size='sm' /> : 'Delete Item' }</Button>
                                <Button color="warning" block onClick={this.toggle} > Update Item</Button>

                            </Col>
                            <UpdateItem show={this.state.show} toggle={this.toggle} item={this.state.item } />
                        </Row>
                        
                    }
                    
                    

                </Container>

               
                
                <Footer/>
            </div>
        )
    }
}

export default withRouter(connect(null, {getItemInfo, deleteItem})(ItemInfo));


import React, { Component } from 'react';
import Navbar from '../Components/HomeNavbar'
import { Container, Button, Row, Input, InputGroup, Card, CardText, CardBody, CardImg, CardTitle, CardSubtitle, Spinner} from 'reactstrap';
import {connect} from 'react-redux';
import { Link, withRouter } from 'react-router-dom';
import AddItem from '../Components/AddItem';
import Footer from '../Components/Footer';
import { getItems, getSellers } from '../actions/authActions'


class Items extends Component {
    _isMounted = false;
    state ={
        items: [],
        loading: true,
        show: false,
        seller_loading: false,
        sellers: [],
        search : []
    }

    componentDidMount=()=>{
        this._isMounted = true;
        if(this.props.items.length>0){
            this.setState({items: this.props.items, loading: false})
        }else{
            this.props.getItems().then(res=>{
                if(this._isMounted){
                    this.setState({items: this.props.items, loading: false})
                }
            })
        }
        
    }
    componentWillUnmount() {this._isMounted = false}

    toggle=()=>{
        this.setState({show: !this.state.show})
    }

    AddItem=()=>{
        this.setState({seller_loading: true})
        this.props.getSellers().then(res=>{
            this.setState({sellers: res, seller_loading: false});
            this.toggle();
        })
    }

    Searching =(e)=>{
        let results = [];
        if(e.target.value.length>0){
            results = this.state.items.filter((item)=> item.name.toLowerCase().indexOf(e.target.value.toLowerCase()) === 0)
        }
        this.setState({search: results});
    }


    render() {
       
        return (

            <div>
                <Navbar/>
                <Container style={{marginTop: '50px', marginBottom: '100px'}} >
                    <h2 style={{marginBottom: '50px', textAlign: 'center'}}>Items</h2>

                    <div style={{display: 'flex', justifyContent:'center', alignItems:'center', marginBottom: '40px', flexWrap:"wrap" }}>
                        <Button color='warning' block style={{width: '300px', marginBottom: '10px'}} onClick={this.AddItem} > {this.state.seller_loading? <Spinner size='sm' /> : 'Add New Item'} </Button>
                        <InputGroup style={{width: '400px', marginLeft: '20px', marginBottom: '10px'}} >
                            <Input placeholder='search item' onChange={this.Searching} />
                        </InputGroup>
                    </div>

                    <Row style={{display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center'}} >
                        {this.state.items.length>0 && this.state.search.length === 0 ? 
                        
                            this.state.items.map((items, index)=>(
                                <Link to={`/item-info?id=${items._id}`} key={index} style={{color: 'black', textDecoration: 'none'}}>
                                    <Card  style={{marginLeft: '20px', marginBottom: '30px', cursor: 'pointer', width:'200px' }}>
                                        <CardImg top style={{height: '180px', width: 'auto', padding: '20px 20px 0 20px'}} src={items.picture} alt='product image'/>
                                        <CardBody>
                                            <CardTitle>{items.name}</CardTitle>
                                            <CardSubtitle>RS: {items.price}</CardSubtitle>
                                            <CardText style={{fontSize: '14px', color: '#848080'}} >{items.short_desc}</CardText>
                                        </CardBody>
                                    </Card>
                                </Link>
                            ))
                        
                        
                        : this.state.search.length >0?

                            this.state.search.map((items, index)=>(
                                <Link to={`/item-info?id=${items._id}`} key={index} style={{color: 'black', textDecoration: 'none'}}>
                                    <Card  style={{marginLeft: '20px', marginBottom: '30px', cursor: 'pointer', width:'200px' }}>
                                        <CardImg top style={{height: '180px', width: 'auto', padding: '20px 20px 0 20px'}} src={items.picture} alt='product image'/>
                                        <CardBody>
                                            <CardTitle>{items.name}</CardTitle>
                                            <CardSubtitle>RS: {items.price}</CardSubtitle>
                                            <CardText style={{fontSize: '14px', color: '#848080'}} >{items.short_desc}</CardText>
                                        </CardBody>
                                    </Card>
                                </Link>
                            ))


                        :
                           <Card  style={{cursor: 'pointer', margin: 'auto' }}>
                                <CardBody>
                                    <CardTitle>No items found !</CardTitle>
                                </CardBody>
                            </Card>

                        }
                    </Row>

                </Container>
                
                <AddItem show={this.state.show} toggle={this.toggle} sellers={this.state.sellers} />
                <Footer/>
            </div>
        )
    }
}

const mapStateToProps = state => ({
    items: state.items.items,
  });
  
  

export default withRouter(connect(mapStateToProps, {getItems, getSellers})(Items));


import React, { Component } from 'react';
import Navbar from '../Components/HomeNavbar'
import { Container, Button, Row, Col, Label, Form, FormGroup, Input, ListGroup, ListGroupItem, ListGroupItemHeading, Spinner, Card, CardBody, CardSubtitle } from 'reactstrap';
import {connect} from 'react-redux';
import { withRouter } from 'react-router-dom';
import { newOrder, getItems } from '../actions/authActions'


class NewOrder extends Component {
    _isMounted= false;

   state={
        all_items: [],
        search: [],
        loading: false,
        loading_order: false,

        name: '',
        address: '',
        tp: '',
        items: [],
        total: 0,

        search_item: '',
        addedItem: null,
        delivery:'',
   }


    componentDidMount=()=>{
        this._isMounted = true;
        this.setState({loading: true});
        this.props.getItems().then(res=>{
            if(this._isMounted){
                this.setState({all_items: res.items, loading: false})
            }
        })
    }
    componentWillUnmount=()=>{
        this._isMounted = false;
    }

   onChange=(e)=>{this.setState({[e.target.name]: e.target.value})}
   onSearching=(e)=>{
        let results = [];
        if(e.target.value.length>0){
            results = this.state.all_items.filter((item)=> item.code.indexOf(e.target.value) === 0)
        }
        this.setState({search: results})
   }

   addItem=(item)=>{this.setState({addedItem:item})}
   addToCart=()=>{
       let item = {
        code: this.state.addedItem.code,
        price: this.state.addedItem.price,
        delivery: this.state.delivery }

       let array = this.state.items;
       array.push(item);
        let total = 0;
        for(let i=0; i<array.length; i++){
            total +=  parseInt(array[i].price) + parseInt(array[i].delivery);
        }

       this.setState({items: array, delivery: '', addedItem: null, total})
   }

   placeOrder=()=>{
       if(this.state.name !== '' && this.state.items.length>0 && this.state.tp!==''){
           this.setState({loading_order: true});

            let order = {
                name: this.state.name,
                items: this.state.items,
                address: this.state.address,
                tp: this.state.tp,
                total: this.state.total
            }

            this.props.newOrder(order).then(res=> {this.setState({loading_order: false}); window.location.reload()})

       }
       
   }

    render() {
        return (
            <div>
                <Navbar/>
                <Container style={{marginTop: '50px', marginBottom: '100px'}} >
                    <div style={{display: 'flex', flexDirection:'column', justifyContent:'center', alignItems:'center'}}>
                        <h2 style={{marginBottom: '50px'}}>New Order</h2>
                    </div>

                    <Row>
                        <Col sm="3" ></Col>
                        {this.state.loading? <div style={{left: '50%', position: 'absolute'}} ><Spinner/></div>:
                        <Col style={{maxWidth: '500px'}} >
                            <Form>
                                <Label><strong>Customer Details</strong></Label><hr style={{marginTop: '0'}}/>
                                <FormGroup>
                                    <Input type='text' name='name' placeholder='Customer Name' onChange={this.onChange} />
                                </FormGroup>
                                <FormGroup>
                                    <Input type='textarea' style={{height: '100px'}} name='address' placeholder='Address to Deliver' onChange={this.onChange} />
                                </FormGroup>
                                <FormGroup>
                                    <Input type='text' name='tp' placeholder='Customer Phone' onChange={this.onChange} />
                                </FormGroup>
                                <br/>

                                <Label><strong>Shopping Cart</strong></Label><hr style={{marginTop: '0'}}/>
                                <Input type='text' name='search_item' placeholder='Search by item code' onChange={this.onSearching} />

                                {this.state.addedItem === null?
                                    <ListGroup style={{marginTop: '20px'}} >
                                    {this.state.search.length>0?
                                        this.state.search.map((item, index)=>(
                                            <ListGroupItem key={index} >
                                                <ListGroupItemHeading>{item.code}</ListGroupItemHeading>
                                                <div className="clearfix"  >
                                                    <p className="float-left" style={{marginBottom: '0'}}>{item.name}</p>
                                                    <p className="float-right" style={{marginBottom: '5'}}>RS: {item.price} </p>
                                                </div>
                                                <Button color='primary' size='sm' onClick={()=>this.addItem(item)} >Add Item</Button>
                                            </ListGroupItem>
                                        ))

                                    :null}

                                    </ListGroup>
                                :
                                    <Card style={{marginTop: '20px'}} >
                                        <CardBody>
                                            <div className="clearfix"  >
                                                <p className="float-left" style={{marginBottom: '0'}}>{this.state.addedItem.code}</p>
                                                <p className="float-right" style={{marginBottom: '0'}}>RS: {this.state.addedItem.price}</p>
                                            </div>
                                            <FormGroup row >
                                                <Label sm={6} bssize="sm">Delivery cost</Label>
                                                <Col sm={6}><Input type="text" name="delivery" placeholder="Rs: " bsSize='sm' onChange={this.onChange} /></Col>
                                            </FormGroup>

                                            <Button block color='success' onClick={this.addToCart} >Add to Cart</Button>
                                        </CardBody>
                                    </Card>}

                            </Form>

                            <Card style={{marginTop: '20px'}}>
                                <CardBody>
                                    <CardSubtitle>Bill</CardSubtitle><hr/>
                                    

                                    {this.state.items.length>0? 
                                        this.state.items.map((item, index)=>(
                                            <div style={{marginBottom: '5px'}} key={index} >
                                                <div className="clearfix"  >
                                                    <p className="float-left" style={{marginBottom: '0'}}>{item.code}</p>
                                                    <p className="float-right" style={{marginBottom: '0'}}>RS: {item.price}</p>
                                                </div>
                                                <div className="clearfix"  >
                                                    <p className="float-left" style={{marginBottom: '0', fontSize: '12px'}}>Delivery cost</p>
                                                    <p className="float-right" style={{marginBottom: '0', fontSize: '12px'}}>RS: {item.delivery}</p>
                                                </div>
                                                <hr/>
                                            </div>
                                        ))
                                    :null}


                                    <div className="clearfix"  >
                                        <p className="float-left" style={{marginBottom: '0'}}><strong>Total</strong></p>
                                        <p className="float-right" style={{marginBottom: '0'}}><strong>RS: {this.state.total}</strong></p>
                                    </div>
                                
                                    
                                </CardBody>
                            </Card>

                                        <Button color='success' block style={{marginTop: '20px'}} onClick={this.placeOrder} >{this.state.loading_order?'wait...': 'Place Order'}</Button>

                        </Col>}
                        
                        <Col sm="3"></Col>
                    </Row>

                </Container>
                
            </div>
        )
    }
}

export default withRouter(connect(null, {getItems, newOrder})(NewOrder));
